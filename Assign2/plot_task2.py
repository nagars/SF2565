import matplotlib.pyplot as plt
def scatter(ax, x, y):
  ax.scatter(x, y, s=1)
fig, ax = plt.subplots(1,1, constrained_layout=True)
r = plt.Rectangle([274314, 7.23895e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 7.23895e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([274314, 6.87068e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 6.87068e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([589508, 7.23895e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([747106, 7.23895e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([589508, 6.87068e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([747106, 6.87068e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([274314, 6.68655e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.68655e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([274314, 6.50241e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.50241e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 6.68655e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([510710, 6.68655e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 6.50241e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([510710, 6.59448e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([550109, 6.59448e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([510710, 6.50241e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([550109, 6.50241e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([274314, 6.41034e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([313713, 6.41034e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([274314, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([313713, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.45638e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([372812, 6.45638e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.41034e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([372812, 6.41034e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([392512, 6.45638e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([412211, 6.45638e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([392512, 6.41034e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([412211, 6.41034e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([392512, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([274314, 6.13414e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.22621e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([392512, 6.22621e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.18017e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([372812, 6.18017e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([353112, 6.13414e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([372812, 6.13414e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([392512, 6.18017e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([412211, 6.18017e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([392512, 6.13414e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([412211, 6.13414e+06], 19699.7, 46034, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 6.41034e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([471310, 6.41034e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([471310, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([510710, 6.41034e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([550109, 6.41034e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([510710, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([550109, 6.31827e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 6.22621e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([471310, 6.22621e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([431911, 6.13414e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([471310, 6.13414e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([510710, 6.13414e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([589508, 6.68655e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([668307, 6.68655e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([589508, 6.59448e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([628908, 6.59448e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([589508, 6.50241e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([628908, 6.50241e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([668307, 6.59448e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([707707, 6.59448e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([668307, 6.50241e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([707707, 6.50241e+06], 39399.4, 92068, fill=False)
ax.add_patch(r)
r = plt.Rectangle([747106, 6.50241e+06], 157597, 368272, fill=False)
ax.add_patch(r)
r = plt.Rectangle([589508, 6.31827e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([668307, 6.31827e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([589508, 6.13414e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([668307, 6.13414e+06], 78798.7, 184136, fill=False)
ax.add_patch(r)
r = plt.Rectangle([747106, 6.13414e+06], 157597, 368272, fill=False)
ax.add_patch(r)
scatter(ax, [371952, 392253, ], [6.92425e+06, 7.00321e+06, ])
scatter(ax, [547686, 475458, 483587, 517454, 475764, 503451, 564601, 542199, 496054, 498264, 511006, 491861, ], [6.87154e+06, 7.06566e+06, 6.96375e+06, 7.18107e+06, 7.00465e+06, 6.8916e+06, 7.09854e+06, 7.12772e+06, 7.00856e+06, 7.02326e+06, 6.96998e+06, 6.98545e+06, ])
scatter(ax, [745273, 600648, 636148, 710119, 634646, 683691, ], [7.46236e+06, 7.36214e+06, 7.24164e+06, 7.4752e+06, 7.4766e+06, 7.5614e+06, ])
scatter(ax, [844351, 749469, 802094, 804867, 801026, 788517, 831761, 856432, 785523, 872447, 823913, 815238, 894634, 795204, 837379, 850579, 771653, 768020, 829850, ], [7.43706e+06, 7.38458e+06, 7.35895e+06, 7.27441e+06, 7.24467e+06, 7.43324e+06, 7.33324e+06, 7.48714e+06, 7.47524e+06, 7.40356e+06, 7.50902e+06, 7.2504e+06, 7.35133e+06, 7.31861e+06, 7.28809e+06, 7.33862e+06, 7.60723e+06, 7.34619e+06, 7.29151e+06, ])
scatter(ax, [671160, 590652, 607309, 645342, 718502, 686759, 614709, 628643, 688475, 617861, 613248, 709260, 636644, 620633, 633100, 653206, 657155, 695506, 635930, 628698, 647273, 657649, 622782, 603997, 602280, 678299, 642210, 622003, 657973, 742810, 646428, 641068, 657907, 686761, 644585, ], [7.03753e+06, 7.22857e+06, 7.03025e+06, 6.95303e+06, 7.06465e+06, 7.0234e+06, 6.95408e+06, 6.99465e+06, 7.07046e+06, 6.91807e+06, 7.00267e+06, 7.16439e+06, 7.03012e+06, 6.92447e+06, 6.95318e+06, 6.94434e+06, 7.02085e+06, 7.09717e+06, 6.92568e+06, 6.92138e+06, 6.98665e+06, 6.9934e+06, 6.87345e+06, 6.94182e+06, 6.87755e+06, 7.00707e+06, 7.0098e+06, 6.91781e+06, 6.97114e+06, 7.06557e+06, 7.00073e+06, 6.96677e+06, 6.95785e+06, 7.1238e+06, 6.93733e+06, ])
scatter(ax, [764482, 788575, 791530, 765887, 801913, 774709, 771423, 768132, 755053, 749756, ], [7.07383e+06, 7.07933e+06, 7.19612e+06, 7.08474e+06, 7.15913e+06, 7.23209e+06, 7.20897e+06, 7.1907e+06, 7.20338e+06, 7.09788e+06, ])
scatter(ax, [390705, 401481, 398546, 394726, 405147, 368129, ], [6.72893e+06, 6.79063e+06, 6.76095e+06, 6.83655e+06, 6.69821e+06, 6.75686e+06, ])
scatter(ax, [281860, 339197, 343023, 330747, 320182, 289851, 284347, 340130, 343645, 302948, 348169, 320938, 351915, 329631, 327244, 288541, 312348, 337100, 277642, 321357, 340618, 323310, ], [6.55042e+06, 6.59037e+06, 6.62982e+06, 6.57595e+06, 6.5575e+06, 6.55429e+06, 6.5138e+06, 6.56479e+06, 6.51884e+06, 6.52349e+06, 6.55291e+06, 6.51615e+06, 6.64189e+06, 6.50479e+06, 6.51709e+06, 6.53796e+06, 6.51093e+06, 6.62022e+06, 6.54105e+06, 6.53843e+06, 6.53758e+06, 6.52583e+06, ])
scatter(ax, [391566, 395957, 381981, 357978, 359083, 427162, 416706, 355235, 367584, 393145, 389033, 397825, 409083, 381630, 356315, 355328, 430158, 364375, 353970, 363197, 416103, 368718, 424278, 387850, 374950, 358643, 416422, 365391, ], [6.55652e+06, 6.63991e+06, 6.59459e+06, 6.59876e+06, 6.50273e+06, 6.588e+06, 6.6735e+06, 6.50676e+06, 6.54802e+06, 6.50591e+06, 6.60667e+06, 6.65642e+06, 6.58174e+06, 6.61522e+06, 6.62523e+06, 6.53922e+06, 6.63517e+06, 6.6158e+06, 6.51207e+06, 6.53959e+06, 6.62026e+06, 6.67253e+06, 6.50436e+06, 6.67313e+06, 6.58029e+06, 6.52799e+06, 6.60725e+06, 6.64026e+06, ])
scatter(ax, [443548, 458400, 440052, 445932, 498835, 508513, 503720, 464984, 484421, ], [6.85307e+06, 6.70979e+06, 6.75124e+06, 6.69672e+06, 6.70367e+06, 6.84328e+06, 6.70871e+06, 6.77364e+06, 6.73514e+06, ])
scatter(ax, [545657, 556587, 514150, 557010, 587832, 517227, 569699, 517416, 552373, 581280, 567632, 566767, 589306, 567552, 530836, 550073, 533323, 526051, 587452, 536381, 582537, 538014, 524811, 581420, 548791, 526078, ], [6.71756e+06, 6.74125e+06, 6.79317e+06, 6.83781e+06, 6.80775e+06, 6.76785e+06, 6.71436e+06, 6.75994e+06, 6.72422e+06, 6.84918e+06, 6.78837e+06, 6.68657e+06, 6.7705e+06, 6.82932e+06, 6.8534e+06, 6.79582e+06, 6.69162e+06, 6.71625e+06, 6.79484e+06, 6.71726e+06, 6.72342e+06, 6.81349e+06, 6.80974e+06, 6.7818e+06, 6.70343e+06, 6.72769e+06, ])
scatter(ax, [507747, 442803, 487802, 493991, 438583, 476632, 453386, 446033, 479187, 452710, 436345, 453076, 498212, 452628, 497190, 493135, 466633, 443037, 434170, 504105, 492185, 508269, 461919, 503555, 441385, 495185, 433953, 495599, 492462, 449800, 435825, 507349, 498580, 502294, 455987, 491214, 441172, 451132, 500015, 491901, 468881, 509446, 475352, 468262, 490310, 488346, 495797, 456606, 444389, 457682, 508100, ], [6.66835e+06, 6.51062e+06, 6.62936e+06, 6.67699e+06, 6.51484e+06, 6.61169e+06, 6.62495e+06, 6.53615e+06, 6.53459e+06, 6.54164e+06, 6.66365e+06, 6.55861e+06, 6.64439e+06, 6.5983e+06, 6.65978e+06, 6.53583e+06, 6.55449e+06, 6.50643e+06, 6.50334e+06, 6.57291e+06, 6.54374e+06, 6.53104e+06, 6.58733e+06, 6.61992e+06, 6.6167e+06, 6.57583e+06, 6.58599e+06, 6.51384e+06, 6.55513e+06, 6.51242e+06, 6.51162e+06, 6.56305e+06, 6.56674e+06, 6.58329e+06, 6.50292e+06, 6.56991e+06, 6.57984e+06, 6.50769e+06, 6.5506e+06, 6.6134e+06, 6.66705e+06, 6.54401e+06, 6.58216e+06, 6.56886e+06, 6.58817e+06, 6.52331e+06, 6.59991e+06, 6.52644e+06, 6.5528e+06, 6.54799e+06, 6.56774e+06, ])
scatter(ax, [539656, ], [6.68602e+06, ])
scatter(ax, [581912, 573169, 554870, 554153, 578692, ], [6.6811e+06, 6.60261e+06, 6.64362e+06, 6.60947e+06, 6.62057e+06, ])
scatter(ax, [574945, 588017, 579908, ], [6.58257e+06, 6.58237e+06, 6.58498e+06, ])
scatter(ax, [291006, 293976, 303376, 307720, 300475, 283744, 296907, 299155, 282244, 293836, 311064, 306131, 306842, 294773, 299809, 284251, 276803, 296937, 285716, 283152, 312589, 300439, 306636, 284488, 290367, 289491, ], [6.46904e+06, 6.48116e+06, 6.49039e+06, 6.46317e+06, 6.46624e+06, 6.4849e+06, 6.44796e+06, 6.42627e+06, 6.47978e+06, 6.43743e+06, 6.4574e+06, 6.4388e+06, 6.47651e+06, 6.49051e+06, 6.43261e+06, 6.44513e+06, 6.49869e+06, 6.42213e+06, 6.45208e+06, 6.49071e+06, 6.44076e+06, 6.4196e+06, 6.4695e+06, 6.47107e+06, 6.49129e+06, 6.48506e+06, ])
scatter(ax, [349598, 315983, 343046, 349204, 352640, 332975, 316825, 319127, 321227, 341448, 316173, 324605, 337939, 330619, 322030, 350652, 322029, 337547, 337836, 337293, 327803, 343726, 339301, 328573, 320519, 337844, 341850, 335805, ], [6.44887e+06, 6.41748e+06, 6.42308e+06, 6.45692e+06, 6.44272e+06, 6.47009e+06, 6.46025e+06, 6.43532e+06, 6.46464e+06, 6.46107e+06, 6.44611e+06, 6.4975e+06, 6.48305e+06, 6.42289e+06, 6.48716e+06, 6.41501e+06, 6.44234e+06, 6.43089e+06, 6.45102e+06, 6.42335e+06, 6.4769e+06, 6.43817e+06, 6.41522e+06, 6.44033e+06, 6.41481e+06, 6.46478e+06, 6.45877e+06, 6.4534e+06, ])
scatter(ax, [313661, 313172, 306000, ], [6.3934e+06, 6.38972e+06, 6.40044e+06, ])
scatter(ax, [346216, 335246, 345737, 333129, 318681, 348942, 317297, 335344, 324316, 323373, 317830, 316623, 333005, 339356, 343142, 320315, 331793, 349539, 352203, 347152, 314298, 348252, 316680, 327419, 316674, 320266, 342407, 347238, 345568, 325667, 337932, 347764, 341527, 329317, 324304, 349738, 335377, 324018, 325201, 320354, 327527, 318702, 339499, ], [6.36058e+06, 6.32882e+06, 6.40838e+06, 6.33839e+06, 6.39705e+06, 6.34129e+06, 6.39889e+06, 6.35756e+06, 6.3887e+06, 6.40545e+06, 6.39822e+06, 6.36213e+06, 6.37302e+06, 6.32311e+06, 6.37315e+06, 6.40415e+06, 6.35445e+06, 6.36669e+06, 6.31928e+06, 6.34797e+06, 6.4017e+06, 6.39362e+06, 6.39428e+06, 6.37915e+06, 6.40597e+06, 6.40604e+06, 6.34771e+06, 6.32779e+06, 6.33208e+06, 6.40816e+06, 6.40543e+06, 6.37203e+06, 6.33974e+06, 6.40253e+06, 6.40074e+06, 6.33577e+06, 6.36398e+06, 6.39353e+06, 6.40554e+06, 6.39777e+06, 6.35062e+06, 6.3991e+06, 6.33151e+06, ])
scatter(ax, [377210, 382411, 382806, ], [6.48535e+06, 6.4741e+06, 6.4575e+06, ])
scatter(ax, [360442, 369906, ], [6.44341e+06, 6.42054e+06, ])
scatter(ax, [391077, 388670, ], [6.44895e+06, 6.4282e+06, ])
scatter(ax, [396285, 409675, 404878, 405602, 408972, 395624, 408595, ], [6.47914e+06, 6.45896e+06, 6.47567e+06, 6.48855e+06, 6.4899e+06, 6.47299e+06, 6.48487e+06, ])
scatter(ax, [429985, 419777, 430584, 428774, 429598, 428411, 421465, 415715, 418613, ], [6.46137e+06, 6.47877e+06, 6.49067e+06, 6.45783e+06, 6.4971e+06, 6.48387e+06, 6.50043e+06, 6.47153e+06, 6.45822e+06, ])
scatter(ax, [401928, 395045, 403910, 411541, 401180, 411794, 408383, 396943, 398111, 392611, ], [6.4429e+06, 6.414e+06, 6.44635e+06, 6.42196e+06, 6.42741e+06, 6.45594e+06, 6.43271e+06, 6.4421e+06, 6.44786e+06, 6.43926e+06, ])
scatter(ax, [424419, 427782, 423352, 429319, 423336, ], [6.44725e+06, 6.44302e+06, 6.45626e+06, 6.41461e+06, 6.44983e+06, ])
scatter(ax, [383046, 371454, 360415, 363255, 354355, 361365, 373557, 389233, 355026, 382974, 381283, 374353, 384675, 382102, 375162, 362923, 354680, 377003, 362116, 377727, 356740, 353982, 368203, 383755, 354491, 365951, 376846, 372711, 368550, 390206, 357363, 372990, 389652, ], [6.36837e+06, 6.34677e+06, 6.35277e+06, 6.37258e+06, 6.35432e+06, 6.32721e+06, 6.39827e+06, 6.3747e+06, 6.37041e+06, 6.38915e+06, 6.35632e+06, 6.32673e+06, 6.34361e+06, 6.4101e+06, 6.388e+06, 6.32247e+06, 6.38446e+06, 6.33532e+06, 6.33729e+06, 6.34581e+06, 6.39798e+06, 6.36142e+06, 6.33222e+06, 6.32255e+06, 6.40995e+06, 6.3441e+06, 6.37267e+06, 6.3777e+06, 6.38153e+06, 6.38982e+06, 6.33315e+06, 6.3544e+06, 6.3645e+06, ])
scatter(ax, [430956, 420057, 428076, 406944, 410591, 421631, 397318, 419476, 404449, 426523, 394485, 404364, 398764, 392888, 399188, 406425, 412606, 400569, 394343, 411321, 403039, 417891, 401026, 401216, 431856, 392985, 416938, 422517, 405833, 417951, 407940, 430054, 413401, 417358, 420164, 424617, 427413, 412306, ], [6.39696e+06, 6.38933e+06, 6.36466e+06, 6.40092e+06, 6.3779e+06, 6.40195e+06, 6.40943e+06, 6.32531e+06, 6.39252e+06, 6.32788e+06, 6.39476e+06, 6.40714e+06, 6.32334e+06, 6.33169e+06, 6.39968e+06, 6.35251e+06, 6.38753e+06, 6.38382e+06, 6.34177e+06, 6.356e+06, 6.37993e+06, 6.35058e+06, 6.37351e+06, 6.39172e+06, 6.40606e+06, 6.40231e+06, 6.38023e+06, 6.33926e+06, 6.38415e+06, 6.40501e+06, 6.36674e+06, 6.37785e+06, 6.32882e+06, 6.39456e+06, 6.37335e+06, 6.35546e+06, 6.34802e+06, 6.40645e+06, ])
scatter(ax, [344828, 340445, 351157, 347038, 348707, 351917, 350200, 351747, ], [6.31272e+06, 6.31658e+06, 6.31271e+06, 6.23857e+06, 6.231e+06, 6.30641e+06, 6.22582e+06, 6.25653e+06, ])
scatter(ax, [369255, 372599, 358992, 367873, 385393, 357971, 370510, 375844, 376569, 362157, 367961, 361352, 358269, 386102, 364045, 361327, 365203, 362367, 376583, 383400, 369681, 355723, 384896, 356821, 371366, 384565, 391131, 371814, 359010, 354323, 365411, ], [6.2912e+06, 6.23992e+06, 6.25882e+06, 6.2951e+06, 6.26274e+06, 6.30971e+06, 6.23258e+06, 6.27451e+06, 6.26573e+06, 6.28252e+06, 6.28404e+06, 6.29645e+06, 6.23159e+06, 6.25101e+06, 6.24679e+06, 6.22915e+06, 6.24156e+06, 6.31802e+06, 6.25192e+06, 6.28051e+06, 6.2802e+06, 6.31691e+06, 6.259e+06, 6.29601e+06, 6.25351e+06, 6.31011e+06, 6.29127e+06, 6.28776e+06, 6.29004e+06, 6.2333e+06, 6.31344e+06, ])
scatter(ax, [397665, 419010, 395756, 421203, 412489, 428209, 422502, 404420, 419444, 425234, 412937, 426340, 402825, 426849, 410859, 428821, 411229, 398554, 399130, 402594, 414868, 427660, ], [6.25526e+06, 6.23983e+06, 6.24161e+06, 6.23134e+06, 6.27334e+06, 6.22853e+06, 6.31284e+06, 6.24823e+06, 6.29231e+06, 6.30158e+06, 6.259e+06, 6.23853e+06, 6.2868e+06, 6.31432e+06, 6.31272e+06, 6.25411e+06, 6.284e+06, 6.30648e+06, 6.22809e+06, 6.29871e+06, 6.2466e+06, 6.24665e+06, ])
scatter(ax, [369755, 370420, 371711, 366911, 366116, 360338, 372395, 366055, 355551, 370640, ], [6.19327e+06, 6.21756e+06, 6.19648e+06, 6.21493e+06, 6.20624e+06, 6.22493e+06, 6.21243e+06, 6.21096e+06, 6.21582e+06, 6.19041e+06, ])
scatter(ax, [381420, 383973, 383832, 384102, 375127, 382108, 375169, 377129, 386967, 387256, 381425, ], [6.20107e+06, 6.2254e+06, 6.21882e+06, 6.18619e+06, 6.18647e+06, 6.2141e+06, 6.21667e+06, 6.20375e+06, 6.2081e+06, 6.19877e+06, 6.18796e+06, ])
scatter(ax, [387208, 391187, 384938, 385435, 386465, 380837, 379856, 386257, 388784, 376629, 376055, 386760, 375516, 389028, 382659, 373332, ], [6.17543e+06, 6.16779e+06, 6.16403e+06, 6.1387e+06, 6.1606e+06, 6.14283e+06, 6.1765e+06, 6.14147e+06, 6.13692e+06, 6.1767e+06, 6.15895e+06, 6.1366e+06, 6.16186e+06, 6.15253e+06, 6.13761e+06, 6.16234e+06, ])
scatter(ax, [395431, ], [6.18558e+06, ])
scatter(ax, [430062, 430615, 414539, ], [6.18318e+06, 6.20687e+06, 6.18178e+06, ])
scatter(ax, [400362, 408376, 393581, ], [6.14765e+06, 6.17678e+06, 6.16552e+06, ])
scatter(ax, [413290, 431243, 425050, 425424, 422623, 414790, ], [6.14801e+06, 6.15465e+06, 6.14799e+06, 6.16058e+06, 6.15211e+06, 6.14674e+06, ])
scatter(ax, [438591, 442541, 448712, 466698, 432539, 457139, 439858, 455566, 445613, 461523, 457500, 443557, 435285, 444844, 451936, 433100, 464813, 443895, 435835, 441760, 448531, 469543, 454048, 436784, 446257, 440236, 449968, 444149, 439198, 433703, 436419, 442154, 441495, ], [6.47241e+06, 6.50205e+06, 6.46201e+06, 6.48667e+06, 6.42088e+06, 6.49286e+06, 6.49087e+06, 6.45671e+06, 6.49598e+06, 6.47029e+06, 6.46388e+06, 6.45602e+06, 6.45186e+06, 6.4877e+06, 6.4938e+06, 6.48664e+06, 6.47777e+06, 6.42662e+06, 6.45558e+06, 6.47598e+06, 6.49051e+06, 6.50213e+06, 6.4481e+06, 6.44596e+06, 6.41183e+06, 6.41713e+06, 6.50095e+06, 6.46074e+06, 6.44099e+06, 6.49678e+06, 6.46097e+06, 6.49729e+06, 6.48471e+06, ])
scatter(ax, [493638, 510487, 507828, 483515, 489237, 479591, 496507, 497924, 492565, 488329, 500941, 483093, 493792, 498470, 498020, 495025, 495233, 501886, 482377, 496776, ], [6.42045e+06, 6.4884e+06, 6.48634e+06, 6.41643e+06, 6.48009e+06, 6.46214e+06, 6.48353e+06, 6.5013e+06, 6.47411e+06, 6.46406e+06, 6.47787e+06, 6.46017e+06, 6.41514e+06, 6.49161e+06, 6.47494e+06, 6.4707e+06, 6.46307e+06, 6.48376e+06, 6.46775e+06, 6.43254e+06, ])
scatter(ax, [451124, 459538, 443688, 451707, 451400, 457651, 467260, 470048, 458706, 466634, 468454, 443371, 467050, 447684, 434272, 444753, 462599, 457151, 469476, ], [6.39407e+06, 6.40561e+06, 6.39108e+06, 6.34631e+06, 6.35591e+06, 6.38502e+06, 6.38146e+06, 6.34342e+06, 6.36935e+06, 6.32595e+06, 6.39262e+06, 6.32687e+06, 6.41007e+06, 6.40422e+06, 6.33909e+06, 6.39809e+06, 6.32024e+06, 6.39592e+06, 6.36622e+06, ])
scatter(ax, [489636, 498019, 475955, 506306, 477046, 506962, 498896, 475759, 479479, 509226, 485791, 498974, 481683, 487084, 475536, 482822, 504784, 480375, 480154, 474323, 483408, 508203, 490789, 499608, 494773, 504581, 489709, 473835, ], [6.32876e+06, 6.33022e+06, 6.3722e+06, 6.35884e+06, 6.38047e+06, 6.37761e+06, 6.36725e+06, 6.35061e+06, 6.36285e+06, 6.3885e+06, 6.37347e+06, 6.39464e+06, 6.3475e+06, 6.31971e+06, 6.3943e+06, 6.31911e+06, 6.34248e+06, 6.3276e+06, 6.35698e+06, 6.32173e+06, 6.38762e+06, 6.34914e+06, 6.34949e+06, 6.3585e+06, 6.35652e+06, 6.3293e+06, 6.40296e+06, 6.3335e+06, ])
scatter(ax, [524393, 523580, 529242, 514415, 523539, 531827, 531725, 522079, 526237, 548225, 535011, 538710, 526623, 516917, 523104, 529999, 529012, 548311, 534420, 537153, 524288, 514135, 549477, 539468, 542017, ], [6.47406e+06, 6.41606e+06, 6.48328e+06, 6.48641e+06, 6.48272e+06, 6.46939e+06, 6.47929e+06, 6.46927e+06, 6.47783e+06, 6.47928e+06, 6.49143e+06, 6.47266e+06, 6.46842e+06, 6.45285e+06, 6.45959e+06, 6.47455e+06, 6.45455e+06, 6.4174e+06, 6.46285e+06, 6.46951e+06, 6.44315e+06, 6.46848e+06, 6.46918e+06, 6.43136e+06, 6.46971e+06, ])
scatter(ax, [566446, 567797, 589480, 578671, 562402, 552202, 588068, 562752, 587052, 573972, 571839, 586124, 551694, 578775, 585385, ], [6.43121e+06, 6.48301e+06, 6.4313e+06, 6.49102e+06, 6.46385e+06, 6.48479e+06, 6.48337e+06, 6.49211e+06, 6.47598e+06, 6.49229e+06, 6.49671e+06, 6.46225e+06, 6.4416e+06, 6.45095e+06, 6.48858e+06, ])
scatter(ax, [525343, 523346, 525098, 515745, 542703, 525978, 517072, 544961, 548261, 534547, 520326, 520443, 515879, ], [6.34525e+06, 6.40214e+06, 6.37811e+06, 6.41011e+06, 6.38575e+06, 6.36651e+06, 6.34761e+06, 6.34987e+06, 6.37268e+06, 6.36322e+06, 6.38171e+06, 6.39103e+06, 6.35509e+06, ])
scatter(ax, [577379, 551503, 572627, 555213, 552917, 568930, 579387, 563298, 560394, ], [6.40623e+06, 6.38703e+06, 6.36327e+06, 6.35199e+06, 6.40428e+06, 6.38045e+06, 6.38645e+06, 6.40406e+06, 6.37293e+06, ])
scatter(ax, [438913, 465673, 440044, 442206, 446128, 439051, 451672, 456039, 445696, 462340, 468266, ], [6.28923e+06, 6.30881e+06, 6.25023e+06, 6.27654e+06, 6.22665e+06, 6.2294e+06, 6.27667e+06, 6.3164e+06, 6.23337e+06, 6.29387e+06, 6.2989e+06, ])
scatter(ax, [481629, 478305, 488444, 482355, 487689, 506727, 481151, 482231, 483573, 496515, 473621, 497002, 474872, 488074, 510053, 493937, 488457, 509656, 504914, 488451, 490044, ], [6.29338e+06, 6.31279e+06, 6.29113e+06, 6.28334e+06, 6.30903e+06, 6.23397e+06, 6.25912e+06, 6.30269e+06, 6.31035e+06, 6.29002e+06, 6.28785e+06, 6.22988e+06, 6.31053e+06, 6.28108e+06, 6.29134e+06, 6.28368e+06, 6.26504e+06, 6.24963e+06, 6.30214e+06, 6.30514e+06, 6.29989e+06, ])
scatter(ax, [443840, 441622, 462864, 438726, 432312, 441471, 464410, 438076, 469083, 469223, 437689, 446703, 457436, 453252, 451087, 436428, 437889, 455276, 447545, 445924, 459790, 451931, 441027, 446648, 452781, 454369, 445759, 447579, ], [6.14612e+06, 6.2043e+06, 6.20671e+06, 6.14637e+06, 6.21696e+06, 6.18659e+06, 6.21129e+06, 6.18281e+06, 6.22569e+06, 6.21503e+06, 6.21288e+06, 6.18228e+06, 6.15437e+06, 6.19571e+06, 6.16899e+06, 6.15383e+06, 6.16858e+06, 6.20433e+06, 6.15376e+06, 6.14022e+06, 6.2161e+06, 6.20681e+06, 6.19811e+06, 6.1764e+06, 6.14673e+06, 6.21858e+06, 6.1504e+06, 6.15741e+06, ])
scatter(ax, [481783, 491526, 476183, ], [6.20936e+06, 6.22376e+06, 6.22263e+06, ])
scatter(ax, [520948, 513106, 588586, 543513, 588632, 515570, 588137, 525407, 533383, 562487, 519989, 588369, 544648, 529066, 541688, 526387, 538536, 556503, 554068, 561023, 537870, 570709, 533271, 548462, 577194, 544496, 522969, 554229, 583527, 521259, 584809, 581818, 533936, 516510, 534909, 577296, 517375, 585636, 528803, 540644, 526535, 589269, 575865, 564135, 575472, 533592, 548221, 589187, 552398, 557097, 532964, 565973, 570277, 524364, 584720, 568429, 550642, ], [6.2827e+06, 6.30524e+06, 6.25237e+06, 6.22858e+06, 6.25801e+06, 6.23396e+06, 6.23815e+06, 6.29921e+06, 6.28795e+06, 6.29745e+06, 6.22805e+06, 6.2463e+06, 6.23524e+06, 6.218e+06, 6.21695e+06, 6.26939e+06, 6.31805e+06, 6.2511e+06, 6.23076e+06, 6.23613e+06, 6.26803e+06, 6.26048e+06, 6.22877e+06, 6.25794e+06, 6.27702e+06, 6.2825e+06, 6.22322e+06, 6.2683e+06, 6.28257e+06, 6.25518e+06, 6.28006e+06, 6.27826e+06, 6.24093e+06, 6.29318e+06, 6.25481e+06, 6.28854e+06, 6.26689e+06, 6.31275e+06, 6.22571e+06, 6.30261e+06, 6.24631e+06, 6.26728e+06, 6.29562e+06, 6.30856e+06, 6.28267e+06, 6.2189e+06, 6.22851e+06, 6.23286e+06, 6.29298e+06, 6.28858e+06, 6.27632e+06, 6.2684e+06, 6.2792e+06, 6.23678e+06, 6.28562e+06, 6.25047e+06, 6.27622e+06, ])
scatter(ax, [635437, 602426, 654728, 614035, 595561, 616258, 606093, 599278, 612405, 598050, 606692, 619366, 596113, 597768, 631762, 595646, 662393, 616663, 629542, 617848, 616415, 603798, 612818, 642291, 611412, 624050, 625037, 626111, 603936, ], [6.7175e+06, 6.77722e+06, 6.69984e+06, 6.84793e+06, 6.68716e+06, 6.86542e+06, 6.82144e+06, 6.84298e+06, 6.78488e+06, 6.72784e+06, 6.79437e+06, 6.79661e+06, 6.8125e+06, 6.70831e+06, 6.72446e+06, 6.79907e+06, 6.71342e+06, 6.72522e+06, 6.734e+06, 6.83814e+06, 6.79278e+06, 6.85402e+06, 6.69802e+06, 6.70969e+06, 6.80497e+06, 6.84845e+06, 6.82854e+06, 6.69724e+06, 6.83145e+06, ])
scatter(ax, [673776, 689202, 694638, ], [6.69886e+06, 6.68718e+06, 6.70064e+06, ])
scatter(ax, [597664, 611016, 620959, 593051, 613607, 627973, 626247, 620113, 621907, 616249, 595586, 593025, 598542, 626351, 614996, 618707, 621849, ], [6.61828e+06, 6.65791e+06, 6.60387e+06, 6.61991e+06, 6.6074e+06, 6.62274e+06, 6.60379e+06, 6.62145e+06, 6.64685e+06, 6.62214e+06, 6.60636e+06, 6.61169e+06, 6.60101e+06, 6.6151e+06, 6.6289e+06, 6.63504e+06, 6.67644e+06, ])
scatter(ax, [645975, 665542, 648448, 652066, 650751, 648053, 659305, 647710, 658515, 643063, 644793, 633395, 638237, 651651, 651596, 641476, 635408, 636810, 642890, ], [6.61055e+06, 6.60337e+06, 6.61513e+06, 6.64237e+06, 6.61784e+06, 6.65083e+06, 6.59592e+06, 6.64458e+06, 6.61113e+06, 6.62807e+06, 6.59636e+06, 6.63242e+06, 6.66234e+06, 6.66302e+06, 6.62704e+06, 6.63656e+06, 6.65772e+06, 6.62681e+06, 6.66698e+06, ])
scatter(ax, [590574, 621869, 606459, 613969, 603190, 622640, 610280, 615697, 616213, 613070, 594108, 596083, 599808, ], [6.53989e+06, 6.53587e+06, 6.51093e+06, 6.53256e+06, 6.5386e+06, 6.55831e+06, 6.5714e+06, 6.51233e+06, 6.51812e+06, 6.55538e+06, 6.50304e+06, 6.55691e+06, 6.51056e+06, ])
scatter(ax, [661518, 660215, 638722, 654164, 662368, 637025, 633897, 667960, 654027, 662212, 645875, 650574, 666341, 630015, ], [6.54333e+06, 6.57095e+06, 6.56314e+06, 6.5369e+06, 6.57896e+06, 6.51534e+06, 6.5931e+06, 6.58042e+06, 6.57634e+06, 6.58851e+06, 6.58703e+06, 6.55332e+06, 6.57296e+06, 6.53088e+06, ])
scatter(ax, [670566, 679212, ], [6.66496e+06, 6.60293e+06, ])
scatter(ax, [679016, 670400, ], [6.57371e+06, 6.58426e+06, ])
scatter(ax, [595532, 610665, 594746, 594223, 621018, 596768, 594156, 623731, 613407, ], [6.44318e+06, 6.50125e+06, 6.37022e+06, 6.45229e+06, 6.33878e+06, 6.40495e+06, 6.32588e+06, 6.3518e+06, 6.4886e+06, ])
scatter(ax, [705663, 701135, 704630, 694439, 704313, 723627, 703174, 706658, 722606, 694575, 694192, 703297, 692549, 720028, 711605, 694915, 710946, 708621, 702355, 723242, 705511, 715038, 693920, 731919, 736181, 710647, 717327, 715090, 688665, 706238, 711890, 706710, 697538, 699552, 687127, 696287, ], [6.34053e+06, 6.32459e+06, 6.35372e+06, 6.36433e+06, 6.34907e+06, 6.40474e+06, 6.35854e+06, 6.37468e+06, 6.36471e+06, 6.35974e+06, 6.34647e+06, 6.34503e+06, 6.3691e+06, 6.38052e+06, 6.39481e+06, 6.34211e+06, 6.37186e+06, 6.35541e+06, 6.36544e+06, 6.37296e+06, 6.3904e+06, 6.37849e+06, 6.38256e+06, 6.42386e+06, 6.41355e+06, 6.36184e+06, 6.39998e+06, 6.4063e+06, 6.37155e+06, 6.38135e+06, 6.3766e+06, 6.39724e+06, 6.35331e+06, 6.34026e+06, 6.35368e+06, 6.3331e+06, ])
scatter(ax, [613185, 609681, 603393, 594688, 602376, ], [6.31008e+06, 6.31428e+06, 6.28499e+06, 6.24853e+06, 6.27899e+06, ])
scatter(ax, [748350, ], [6.44751e+06, ])
ax.axis('equal')
plt.show()
